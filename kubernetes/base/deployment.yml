apiVersion: apps/v1
kind: Deployment
metadata:
  name: cheung0825
spec:
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: cheung0825
  template:
    spec:
      containers:
        - name: cheung0825
          image: fake-image
          resources:
            requests:
              memory: 64Mi
              cpu: 0.1
            limits:
              memory: 256Mi
              cpu: 0.5
          livenessProbe:
            exec:
              command:
              - rm
              - /tmp/service-alive
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              port: http
              path: /status/ready
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
          ports:
            - containerPort: 80
              name: http
          envFrom:
          - configMapRef:
              name: cheung0825-config
          env:
          - name: SERVER_PORT
            value: "80"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: DATABASE_USERNAME
            valueFrom:
                secretKeyRef:
                  name: cheung0825
                  key: DATABASE_USERNAME
          - name: DATABASE_PASSWORD
            valueFrom:
                secretKeyRef:
                  name: cheung0825
                  key: DATABASE_PASSWORD
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: cheung0825
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: cheung0825
  maxReplicas: 2
  minReplicas: 1
  targetCPUUtilizationPercentage: 60
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: hello
spec:
  suspend: true
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: hello
            image: busybox
            args:
            - /bin/sh
            - -c
            - date; echo Hello from the Kubernetes cluster
          restartPolicy: OnFailure
